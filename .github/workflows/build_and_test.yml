# Copyright 2025 The Khronos Group Inc.
# SPDX-License-Identifier: Apache-2.0
name: Build and Deploy Reference Pages and Other Documentation

# Ensure documentation builds on all platforms. Deploy from the Ubuntu build.
#
#   The plan is for this to be used to build the docs on all platforms for
# PRs and pushes to main and remove those builds from the platform software
# builds. On release tags though the platform software builsd will have to
# build the documentation so it can be included in the release package.
#   Due to a tight deadline for 4.4 there is no time to modify the platform
# software builds to build docs only on release tags so they continue to
# build for PRs and pushes to main. Therefore all but the Ubuntu build have
# been disabled here for now.
#   The ubuntu build is used to deploy the docs to GitHub Pages on a release
# build. The plan, once the destination is set up, is to use this workflow
# to deploy the docs for a release to a location on khronos.org and docs
# for any pushes to main to GitHub Pages.

on:
  # Trigger the workflow on a pull request,
  pull_request:

  push:
    # And on pushes to main, which will occur when a PR is merged.
    branches:
      - main
    # Also trigger on push of release tags to any branch. Useful
    # for testing release builds before merging to main.
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-*'
    paths-ignore:
      - README.md
      - CODE_OF_CONDUCT.md
      - CONTRIBUTING.md
      - LICENSE
      - Makefile

  # Allow manual trigger
  workflow_dispatch:

jobs:
  build-lodepng:
    name: Build lodepng utilities and tests
    strategy:
      matrix:
        os: [ macos-latest,  ubuntu-latest, windows-latest ]

    runs-on: ${{ matrix.os }}

    env:
      BUILD_DIR: build

    steps:
    - uses: actions/checkout@v4
      with:
        # Fetch all history to make sure tags are
        # included (used for version creation)
        fetch-depth: 0

    - name: Force fetch provoking tag's annotation.
      # Work around https://github.com/actions/checkout/issues/290.
      if: github.ref_type == 'tag'
      run: git fetch -f origin ${{ github.ref }}:${{ github.ref }}

    - name: Install vcpkg on macOS and Ubuntu
      if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
      run: |
        pushd $HOME
        git clone https://github.com/microsoft/vcpkg
        cd vcpkg && ./bootstrap-vcpkg.sh -disableMetrics && echo "VCPKG_ROOT=`pwd`" >> $GITHUB_ENV
        popd

    # vcpkg is pre-installed on Windows.

    - name: Export GitHub Actions cache and vcpkg environment variables
      uses: actions/github-script@v7
      with:
        # Caution. JSON in use here. "#core" breaks the build.
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
          core.exportVariable('VCPKG_BINARY_SOURCES', "clear;x-gha,readwrite");

    - name: Build utilities and tests
      run: |
        cmake -B ${{ env.BUILD_DIR }} -D CMAKE_TOOLCHAIN_FILE="$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake"
        cmake --build ${{ env.BUILD_DIR }} --config Release
        cmake --build ${{ env.BUILD_DIR }} --config Debug

    - name: Run tests
      run: build/unittest

    - name: Upload compiled utilities and tests
      uses: actions/upload-artifact@v4
      with:
        name: lodepng-${{ matrix.os }}
        path: ${{ env.BUILD_DIR }}/Release
